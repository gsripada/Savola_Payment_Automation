<Activity mc:Ignorable="sap sap2010" x:Class="Excel_Sheets_Rows_Count_Validation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="FilePath_PaymentAutomation_DownloadAttachment" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="Create_RowCount" Type="InArgument(x:Int32)" />
    <x:Property Name="Cancel_RowCount" Type="InArgument(x:Int32)" />
    <x:Property Name="SendMail" Type="InArgument(x:String)" />
  </x:Members>
  <this:Excel_Sheets_Rows_Count_Validation.FilePath_PaymentAutomation_DownloadAttachment>
    <InArgument x:TypeArguments="x:String" />
  </this:Excel_Sheets_Rows_Count_Validation.FilePath_PaymentAutomation_DownloadAttachment>
  <this:Excel_Sheets_Rows_Count_Validation.Create_RowCount>
    <InArgument x:TypeArguments="x:Int32" />
  </this:Excel_Sheets_Rows_Count_Validation.Create_RowCount>
  <this:Excel_Sheets_Rows_Count_Validation.Cancel_RowCount>
    <InArgument x:TypeArguments="x:Int32" />
  </this:Excel_Sheets_Rows_Count_Validation.Cancel_RowCount>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>931,1829</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Excel_Sheets_Rows_Count_Validation_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="70">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Excel_Sheets_Rows_Count_Validation" sap:VirtualizedContainerService.HintSize="810,1764" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="WKB" />
      <Variable x:TypeArguments="sd:DataTable" Name="DT_EachSheetCount" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="ExcelWKB_validation" />
      <Variable x:TypeArguments="x:Int32" Name="SheetCount" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="sheet_name" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="List_SheetNameCheck" />
      <Variable x:TypeArguments="x:String" Name="NameExists" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="List_CreatePay_ColNameCheck" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="List_CancelPay_ColNameCheck" />
      <Variable x:TypeArguments="x:String" Name="filename_vba" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="768,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Excel file validation started&quot;]" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each file in directory" sap:VirtualizedContainerService.HintSize="768,862" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[Directory.GetFiles(FilePath_PaymentAutomation_DownloadAttachment,&quot;*.xlsx&quot;)]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="732,728" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart sap:VirtualizedContainerService.HintSize="690,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <av:Point x:Key="ShapeLocation">0,2.5</av:Point>
                  <av:Size x:Key="ShapeSize">60,75</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">60,40 90,40 90,0 200,0 200,24</av:PointCollection>
                  <x:Double x:Key="Width">656</x:Double>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Flowchart.StartNode>
                <x:Reference>__ReferenceID7</x:Reference>
              </Flowchart.StartNode>
              <FlowStep x:Name="__ReferenceID0">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">360,10</av:Point>
                    <av:Size x:Key="ShapeSize">262,60</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">491,70 491,100 480,100 480,104.5</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[SheetCount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[ExcelWKB_validation.GetSheets.Count]</InArgument>
                  </Assign.Value>
                </Assign>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">380,104.5</av:Point>
                        <av:Size x:Key="ShapeSize">200,51</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">480,155.5 480,174.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Validate Sheet &amp; Row Count &amp; Data" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Workbook="[WKB]" WorkbookPath="[file]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="2294,3764" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[SheetCount=2]" DisplayName="If sheet are present and dat rows" sap:VirtualizedContainerService.HintSize="2252,1036" sap2010:WorkflowViewState.IdRef="If_13">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="839,879" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign sheetname list" sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="scg:List(x:String)">[List_SheetNameCheck]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="scg:List(x:String)">[new List(of string)(new string(){"Created_Payments","Cancelled_Payments"})]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign DisplayName="Assign check name avail" sap:VirtualizedContainerService.HintSize="797,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[NameExists]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[List_SheetNameCheck.All(function(x) sheet_name.Contains(x)).ToString]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If Condition="[NameExists=&quot;True&quot;]" DisplayName="If sheetname is present" sap:VirtualizedContainerService.HintSize="797,587" sap2010:WorkflowViewState.IdRef="If_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_13" Level="Info" Message="[&quot;Create Payment Sheet &amp; Void Payment Sheet found&quot;]" />
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap:VirtualizedContainerService.HintSize="376,430" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Missing or renamed excel sheets found in &quot;+file.ToString]" />
                                        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello&quot;+Environment.NewLine+Environment.NewLine+&quot;Payment Automation Excel file sheet name check Status - Failed&quot;+Environment.NewLine+&quot;Reason -Naming of mandatory sheets missing.&quot;+Environment.NewLine+Environment.NewLine+Environment.NewLine+&quot;Thanks&quot;+Environment.NewLine+&quot;RPA BOT&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_6" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Missing or renamed excel sheets found in &quot;+file.ToString]" To="[SendMail]">
                                          <ui:SendOutlookMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                          </ui:SendOutlookMail.Files>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:SendOutlookMail>
                                        <Throw Exception="[new BusinessRuleException(&quot;Insufficient name of excel sheets found&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_7" />
                                      </Sequence>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,430" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="[&quot;Insufficient count of excel sheets found&quot;]" />
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello&quot;+Environment.NewLine+Environment.NewLine+&quot;Payment Automation Excel file count Status - Failed&quot;+Environment.NewLine+&quot;Reason -less no. of sheets found.&quot;+Environment.NewLine+Environment.NewLine+Environment.NewLine+&quot;Thanks&quot;+Environment.NewLine+&quot;RPA BOT&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_7" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="Insufficient count of sheets found in Payment Automation file" To="[SendMail]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                  <Throw Exception="[new BusinessRuleException(&quot;Insufficient count of excel sheets found&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_8" />
                                </Sequence>
                              </If.Else>
                            </If>
                            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each sheet in workbook" sap:VirtualizedContainerService.HintSize="2252,1969" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[WKB.GetSheets]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="x:String">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="x:String" Name="sheet" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="2216,1836" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelReadRange AddHeaders="True" DataTable="[DT_EachSheetCount]" DisplayName="Read Excel Range" sap:VirtualizedContainerService.HintSize="2174,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[sheet]">
                                      <ui:ExcelReadRange.Range>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </ui:ExcelReadRange.Range>
                                    </ui:ExcelReadRange>
                                    <If Condition="[sheet.ToLower.Trim.Contains(&quot;cancel&quot;)]" DisplayName="If to check column is present in cancel" sap:VirtualizedContainerService.HintSize="2174,1645" sap2010:WorkflowViewState.IdRef="If_14">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="875,1331" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[NameExists]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="scg:List(x:String)">[List_CancelPay_ColNameCheck]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"Supplier Name","Site","Business Unit","payment number","Payment Date"})]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[Cancel_RowCount]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[DT_EachSheetCount.Rows.Count]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each col in cancel" sap:VirtualizedContainerService.HintSize="833,939" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[List_CancelPay_ColNameCheck]">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="x:String">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="797,806" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_2" Result="[NameExists]" SheetName="[sheet]" Value="[item]">
                                                    <ui:ExcelLookUpRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ExcelLookUpRange.Range>
                                                  </ui:ExcelLookUpRange>
                                                  <If Condition="[NameExists&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="755,587" sap2010:WorkflowViewState.IdRef="If_17">
                                                    <If.Then>
                                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_18" Level="Info" Message="[&quot;Column found in void payment sheet : &quot;+item]" />
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence sap:VirtualizedContainerService.HintSize="376,430" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_19" Level="Info" Message="[&quot;Column missing in void payment sheet : &quot;+item]" />
                                                        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello&quot;+Environment.NewLine+Environment.NewLine+&quot;Payment Automation Excel file column check Status - Failed&quot;+Environment.NewLine+&quot;Reason -Mandatory column missing from VoidPayment sheet :&quot;+item+Environment.NewLine+Environment.NewLine+Environment.NewLine+&quot;Thanks&quot;+Environment.NewLine+&quot;RPA BOT&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_9" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Column missing in void payment sheet : &quot;+item]" To="[SendMail]">
                                                          <ui:SendOutlookMail.Files>
                                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                          </ui:SendOutlookMail.Files>
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                        </ui:SendOutlookMail>
                                                        <Throw Exception="[new BusinessRuleException(&quot;Column missing in create payment sheet : &quot;+item)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_10" />
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ForEach>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <If Condition="[sheet.ToLower.Trim.Contains(&quot;create&quot;)]" DisplayName="If to check column is present in create" sap:VirtualizedContainerService.HintSize="1254,1488" sap2010:WorkflowViewState.IdRef="If_19">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If.Then>
                                            <Sequence sap:VirtualizedContainerService.HintSize="875,1331" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_23">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[NameExists]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Nothing]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="scg:List(x:String)">[List_CreatePay_ColNameCheck]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(New String(){"Supplier Name","Site","Business Unit","Invoice Number","Date","Invoice Currency","Amount Due","Amount Paid","Payment Date"})]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap:VirtualizedContainerService.HintSize="833,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[Create_RowCount]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[DT_EachSheetCount.Rows.Count]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each col in create" sap:VirtualizedContainerService.HintSize="833,939" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[List_CreatePay_ColNameCheck]">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:String">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="797,806" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:ExcelLookUpRange DisplayName="LookUp Range" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="ExcelLookUpRange_3" Result="[NameExists]" SheetName="[sheet]" Value="[item]">
                                                        <ui:ExcelLookUpRange.Range>
                                                          <InArgument x:TypeArguments="x:String">
                                                            <Literal x:TypeArguments="x:String" Value="" />
                                                          </InArgument>
                                                        </ui:ExcelLookUpRange.Range>
                                                      </ui:ExcelLookUpRange>
                                                      <If Condition="[NameExists&lt;&gt;&quot;&quot;]" sap:VirtualizedContainerService.HintSize="755,587" sap2010:WorkflowViewState.IdRef="If_18">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If.Then>
                                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_22" Level="Info" Message="[&quot;Column found in create payment sheet : &quot;+item]" />
                                                        </If.Then>
                                                        <If.Else>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="376,430" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Column missing in create payment sheet : &quot;+item]" />
                                                            <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello&quot;+Environment.NewLine+Environment.NewLine+&quot;Payment Automation Excel file column check Status - Failed&quot;+Environment.NewLine+&quot;Reason -Mandatory column missing from CreatePayment sheet :&quot;+item+Environment.NewLine+Environment.NewLine+Environment.NewLine+&quot;Thanks&quot;+Environment.NewLine+&quot;RPA BOT&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_11" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[&quot;Column missing in create payment sheet : &quot;+item]" To="[SendMail]">
                                                              <ui:SendOutlookMail.Files>
                                                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                              </ui:SendOutlookMail.Files>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SendOutlookMail>
                                                            <Throw Exception="[new BusinessRuleException(&quot;Column missing in create payment sheet : &quot;+item)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_11" />
                                                          </Sequence>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </ui:ForEach>
                                            </Sequence>
                                          </If.Then>
                                          <If.Else>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Info" Message="[&quot;Error found in identifying sheet &quot;+sheet]" />
                                          </If.Else>
                                        </If>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                            <If Condition="[Create_RowCount=0 and Cancel_RowCount=0]" DisplayName="If data rows are not present" sap:VirtualizedContainerService.HintSize="2252,587" sap2010:WorkflowViewState.IdRef="If_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,430" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;There are no data for Create and Cancel Payment to process&quot;]" />
                                  <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Body="[&quot;Hello&quot;+Environment.NewLine+Environment.NewLine+&quot;Payment Automation Excel file doesnt have any data. Status - Failed&quot;+Environment.NewLine+&quot;Reason -No data row found to process in CreatePayment sheet or Cancel Payment sheet&quot;+Environment.NewLine+Environment.NewLine+Environment.NewLine+&quot;Thanks&quot;+Environment.NewLine+&quot;RPA BOT&quot;]" DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_10" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="No data found in the file to process" To="[SendMail]">
                                    <ui:SendOutlookMail.Files>
                                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                    </ui:SendOutlookMail.Files>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </ui:SendOutlookMail>
                                  <Throw Exception="[new BusinessRuleException(&quot;No sufficient rows found in the Excel sheet to process for Create and Cancel Payment&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_2">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;The row count in the excel file is insuficient&quot;]" />
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">380,174.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,51</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">480,226.5 480,250 490,250</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Queue_LoadExcelData_Create_CancelPayment workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Project Init WorkFlows\Queue_LoadExcelData_Create_CancelPayment.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="Filename">[file]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="Create_RowCnt">[Create_RowCount]</InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="Cancel_RowCnt">[Cancel_RowCount]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">359,250</av:Point>
                                <av:Size x:Key="ShapeSize">262,60</av:Size>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[filename_vba]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[file]</InArgument>
                              </Assign.Value>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Assign>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
              <FlowStep x:Name="__ReferenceID4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">100,330</av:Point>
                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">300,356 330,356 330,40 360,40</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Read Excel" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" Workbook="[ExcelWKB_validation]" WorkbookPath="[file]">
                  <ui:ExcelApplicationScope.Body>
                    <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_2" Sheets="[sheet_name]" />
                      </Sequence>
                    </ActivityAction>
                  </ui:ExcelApplicationScope.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelApplicationScope>
                <FlowStep.Next>
                  <x:Reference>__ReferenceID0</x:Reference>
                </FlowStep.Next>
              </FlowStep>
              <x:Reference>__ReferenceID1</x:Reference>
              <x:Reference>__ReferenceID2</x:Reference>
              <x:Reference>__ReferenceID3</x:Reference>
              <FlowStep x:Name="__ReferenceID7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">100,24</av:Point>
                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                    <av:PointCollection x:Key="ConnectorLocation">200,76 200,126</av:PointCollection>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="KillProcess_3" ProcessName="EXCEL" />
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">100,126</av:Point>
                        <av:Size x:Key="ShapeSize">200,51</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">200,178 200,228</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Console.WriteLine(&quot;Starting the file processing&quot;)&#xA;&#xA;Dim excel As Microsoft.Office.Interop.Excel.Application&#xA;Dim wb As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim ws1 As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim ws2 As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim wsA As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim wsB As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim lastRow As Integer&#xA;&#xA;Try&#xA;&#xA; excel = New Microsoft.Office.Interop.Excel.ApplicationClass'create the instance of excel work book'&#xA; excel.DisplayAlerts=False&#xA; excel.Visible=False&#xA;&#xA; wb=excel.Workbooks.Open(Filename)&#xA; Console.WriteLine(&quot;Reading Workbook&quot;)&#xA; &#xA;'Opening create and cancel payment sheets&#xA; ws1= CType(wb.Worksheets(&quot;Created_Payments&quot;),Microsoft.Office.Interop.Excel.Worksheet)&#xA; ws2= CType(wb.Worksheets(&quot;Cancelled_Payments&quot;),Microsoft.Office.Interop.Excel.Worksheet)&#xA;&#xA;Console.WriteLine(&quot;Reading Sheet&quot;)&#xA; &#xA;'Add New Sheet &quot;ADC&quot;  to OutputFile&#xA;wsA=CType(wb.Worksheets.Add,Microsoft.Office.Interop.Excel.Worksheet)&#xA;wsB=CType(wb.Worksheets.Add,Microsoft.Office.Interop.Excel.Worksheet)&#xA;&#xA;wsA.name = &quot;1&quot;&#xA;lastRow=ws1.UsedRange.Count&#xA;ws1.Range(&quot;A2&quot;,&quot;J&quot;+lastRow.ToString).Copy&#xA;wsA.Range(&quot;A1&quot;).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues)&#xA;&#xA;wsB.name = &quot;2&quot;&#xA;lastRow=ws2.UsedRange.Count&#xA;ws2.Range(&quot;A2&quot;,&quot;E&quot;+lastRow.ToString).Copy&#xA;wsB.Range(&quot;A1&quot;).PasteSpecial(Microsoft.Office.Interop.Excel.XlPasteType.xlPasteValues)&#xA;&#xA;ws1.Delete&#xA;ws2.Delete&#xA;wsA.name = &quot;Created_Payments&quot;&#xA;wsB.name = &quot;Cancelled_Payments&quot;&#xA;&#xA;wb.Save&#xA;Catch es As Exception&#xA; Console.WriteLine(es.Message)&#xA;Throw es&#xA;Finally&#xA; Console.WriteLine(&quot;done&quot;)&#xA;wb.Close&#xA;excel.Quit&#xA; End Try" DisplayName="Invoke code create and cleanse inout file" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                      <ui:InvokeCode.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="Filename">[file]</InArgument>
                      </ui:InvokeCode.Arguments>
                    </ui:InvokeCode>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">100,228</av:Point>
                            <av:Size x:Key="ShapeSize">200,51</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">200,280 200,330</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="KillProcess_4" ProcessName="EXCEL" />
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID4</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
              <x:Reference>__ReferenceID5</x:Reference>
              <x:Reference>__ReferenceID6</x:Reference>
            </Flowchart>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="768,132" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="EXCEL" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Console.WriteLine(&quot;accessing excel&quot;)&#xA;Dim excelApp As Microsoft.Office.Interop.Excel.Application = New Microsoft.Office.Interop.Excel.Application()&#xA;Dim excelWorkbook As Microsoft.Office.Interop.Excel.Workbook = excelApp.Workbooks.Open(Filename)&#xA;Dim excelWorkSheet As Microsoft.Office.Interop.Excel.Sheets = excelWorkbook.Sheets&#xA;&#xA;Dim lastRow As Integer&#xA;excelApp.DisplayAlerts=False&#xA;excelApp.Visible=False&#xA; &#xA;    Try&#xA;        &#xA;        For Each work As Microsoft.Office.Interop.Excel.Worksheet In excelWorkSheet&#xA;&#x9;&#x9;&#x9;lastRow=work.UsedRange.Rows.Count&#xA;&#x9;&#x9;&#x9;work.Range(&quot;A2:D&quot;+lastRow.ToString).NumberFormat=&quot;@&quot;&#xA;&#x9;&#x9;&#x9;Console.WriteLine(work.Name)&#xA;&#x9;&#x9;&#x9;'pass arg of datatable row.count as lr           &#xA;        Next&#xA;&#xA;        excelWorkbook.Save()&#xA;    Catch ex As Exception&#xA;    Finally&#xA;        excelApp.Quit()&#xA;    End Try&#xA;&#x9;Console.WriteLine(&quot;accessing excel done&quot;)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="768,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="Filename">[filename_vba]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="768,132" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="EXCEL" />
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="768,91" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Excel file validation completed&quot;]" />
  </Sequence>
</Activity>